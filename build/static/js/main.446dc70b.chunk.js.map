{"version":3,"sources":["Components/Person.js","Services/persons.js","Components/Notification.js","App.js","index.js"],"names":["Person","person","deleteRecord","name","number","onClick","baseUrl","axios","get","newObject","post","id","delete","personObject","put","Notification","message","type","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","notification","setNewNotification","setType","useEffect","personService","then","response","data","window","confirm","filter","p","setTimeout","catch","filtered","toLowerCase","includes","value","onChange","event","target","onSubmit","preventDefault","length","concat","error","console","log","found","find","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.446dc70b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({ person, deleteRecord }) => {\r\n    return (\r\n        <div>\r\n            {person.name} {person.number}\r\n            <button onClick={() => deleteRecord(person)}> delete </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst remove = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, personObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, personObject)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={`${type}`}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Person from './Components/Person'\r\nimport personService from './Services/persons'\r\nimport Notification from './Components/Notification'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('') \r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [newFilter, setNewFilter] = useState('')\r\n    const [notification, setNewNotification] = useState(null)\r\n    const [type, setType] = useState(null)\r\n\r\n    useEffect(() => {\r\n        personService\r\n            .getAll()\r\n            .then(response => {\r\n                setPersons(response.data)\r\n            })\r\n    }, [])\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n\r\n        const personObject = {\r\n                name: newName,\r\n                number: newNumber\r\n        }\r\n\r\n        if (persons.filter(p => p.name === newName).length === 0) {\r\n            personService\r\n                .create(personObject)\r\n                .then(response => {\r\n                    setPersons(persons.concat(response.data))\r\n                    setNewNotification(`Added ${newName}`)\r\n                    setType('notification')\r\n                    setTimeout(() => {\r\n                        setNewNotification(null)\r\n                        setType(null)\r\n                    }, 5000)\r\n                    \r\n                })\r\n                .catch(error => {\r\n                    console.log(error.response.data)\r\n                    setNewNotification(error.response.data.error)\r\n                    setType('error')\r\n                    setTimeout(() => {\r\n                        setNewNotification(null)\r\n                        setType(null)\r\n                    }, 5000)\r\n                })\r\n\r\n                setNewName('')\r\n                setNewNumber('')\r\n        } else {\r\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n                const found = persons.find(p => p.name === personObject.name)\r\n\r\n                personService\r\n                    .update(found.id, personObject)\r\n                    .then(response => {\r\n                        setPersons(persons.map(person => person.id !== found.id ? person : response.data))\r\n\r\n                        setNewNotification(`Updated phonenumber for ${newName}`)\r\n                        setType('notification')\r\n                        setTimeout(() => {\r\n                            setNewNotification(null)\r\n                            setType(null)\r\n                        }, 5000)\r\n\r\n                    }).catch(() => {\r\n                        setNewNotification(`${found.name} is already deleted`, `error`)\r\n                        setType('error')\r\n                        setTimeout(() => {\r\n                            setNewNotification(null)\r\n                            setType(null)\r\n                        }, 5000)\r\n\r\n                    })\r\n            }\r\n        }\r\n\r\n        setNewName('')\r\n        setNewNumber('')\r\n    }\r\n\r\n    const deleteRecord = (person) => {\r\n        if (window.confirm(`Are you sure you want to delete ${person.name}?`)) {\r\n            personService\r\n                .remove(person.id)\r\n                .then(response => {\r\n                    setPersons(persons.filter(p => p.id !== person.id))\r\n\r\n                    setNewNotification(`Deleted ${newName}`)\r\n                    setType('notification')\r\n                    setTimeout(() => {\r\n                        setNewNotification(null)\r\n                        setType(null)\r\n                    }, 5000)\r\n\r\n                }).catch(() => {\r\n                    setPersons(persons.filter(p => p.id !== person.id))\r\n\r\n                    setNewNotification(`${person.name} is already deleted`, `error`)\r\n                    setType('error')\r\n                    setTimeout(() => {\r\n                        setNewNotification(null)\r\n                        setType(null)\r\n                    }, 5000)\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handleFilterChange = (event) => {\r\n        setNewFilter(event.target.value)\r\n    }\r\n\r\n    const filtered = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification message={notification} type={type} />\r\n            <div>\r\n                filter shown with <input value={newFilter} onChange={handleFilterChange} />\r\n            </div>\r\n            <h2>Add new phone record</h2>\r\n            <form onSubmit={addPerson}>\r\n                <div>\r\n                    name: <input value={newName} onChange={handleNameChange} />\r\n                </div>\r\n                <div>\r\n                    number: <input value={newNumber} onChange={handleNumberChange} />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n            <h2>Numbers</h2>\r\n            <div>\r\n                {filtered.map(person =>\r\n                    <Person key={person.id} person={person} deleteRecord={deleteRecord} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport './App.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}